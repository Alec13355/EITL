---
interface Props {
	title: string;
}

const { title } = Astro.props;
---

<!DOCTYPE html>
<html lang="en">
	<head>
		<meta charset="UTF-8" />
		<meta name="viewport" content="width=device-width" />
		<link rel="icon" type="image/svg+xml" href="/favicon.svg" />
		<meta name="generator" content={Astro.generator} />
		<title>{title}</title>
	</head>
	<body class="min-h-screen bg-tealbg text-sand">
		<nav class="bg-tealbg border-b border-accent">
			<div class="max-w-7xl mx-auto px-4 sm:px-6 lg:px-8">
				<div class="flex justify-between h-16">
					<div class="flex">
						<div class="flex-shrink-0 flex items-center">
							<a href="/" class="flex items-center">
								<img src="/Engineer.png" alt="Engineer In The Loop Logo" class="h-12 w-12 object-contain rounded-md mr-2" />
							</a>
						</div>
						<div class="hidden sm:ml-6 sm:flex sm:space-x-8">
							<a href="/" class="border-transparent text-sand hover:text-accent hover:border-accent inline-flex items-center px-1 pt-1 border-b-2 text-sm font-medium transition-colors">
								Home
							</a>
							<a href="/about" class="border-transparent text-sand hover:text-accent hover:border-accent inline-flex items-center px-1 pt-1 border-b-2 text-sm font-medium transition-colors">
								About
							</a>
							<a href="/blog" class="border-transparent text-sand hover:text-accent hover:border-accent inline-flex items-center px-1 pt-1 border-b-2 text-sm font-medium transition-colors">
								Blog
							</a>
							<a href="/podcast" class="border-transparent text-sand hover:text-accent hover:border-accent inline-flex items-center px-1 pt-1 border-b-2 text-sm font-medium transition-colors">
								Podcast
							</a>
							<a href="/workwithme" class="border-transparent text-sand hover:text-accent hover:border-accent inline-flex items-center px-1 pt-1 border-b-2 text-sm font-medium transition-colors">
								Work With Me
							</a>
							<!-- <a href="/events" class="border-transparent text-sand hover:text-accent hover:border-accent inline-flex items-center px-1 pt-1 border-b-2 text-sm font-medium transition-colors">
								Events
							</a> -->
						</div>
					</div>
					
					<!-- Mobile menu button -->
					<div class="sm:hidden flex items-center">
						<button id="mobile-menu-button" class="text-sand hover:text-accent focus:outline-none focus:text-accent">
							<svg class="h-6 w-6" fill="none" viewBox="0 0 24 24" stroke="currentColor">
								<path stroke-linecap="round" stroke-linejoin="round" stroke-width="2" d="M4 6h16M4 12h16M4 18h16" />
							</svg>
						</button>
					</div>
				</div>
			</div>

			<!-- Mobile menu -->
			<div id="mobile-menu" class="sm:hidden hidden">
				<div class="px-2 pt-2 pb-3 space-y-1 bg-tealbg border-t border-accent">
					<a href="/" class="text-sand hover:text-accent block px-3 py-2 text-base font-medium transition-colors">
						Home
					</a>
					<a href="/about" class="text-sand hover:text-accent block px-3 py-2 text-base font-medium transition-colors">
						About
					</a>
					<a href="/blog" class="text-sand hover:text-accent block px-3 py-2 text-base font-medium transition-colors">
						Blog
					</a>
					<a href="/podcast" class="text-sand hover:text-accent block px-3 py-2 text-base font-medium transition-colors">
						Podcast
					</a>
					<a href="/workwithme" class="text-sand hover:text-accent block px-3 py-2 text-base font-medium transition-colors">
						Work With Me
					</a>
					<!-- <a href="/events" class="text-sand hover:text-accent block px-3 py-2 text-base font-medium transition-colors">
						Events
					</a> -->
				</div>
			</div>
		</nav>

		<main class="max-w-7xl mx-auto py-6 sm:px-6 lg:px-8">
			<slot />
		</main>

		<footer class="bg-tealbg border-t border-accent mt-12">
			<div class="max-w-7xl mx-auto py-6 px-4 sm:px-6 lg:px-8">
				<p class="text-center text-sand text-sm">
					Â© {new Date().getFullYear()} Xerikos LLC. All rights reserved.
				</p>
			</div>
		</footer>

		<script>
			// Mobile menu toggle
			const mobileMenuButton = document.getElementById('mobile-menu-button');
			const mobileMenu = document.getElementById('mobile-menu');

			if (mobileMenuButton && mobileMenu) {
				mobileMenuButton.addEventListener('click', () => {
					mobileMenu.classList.toggle('hidden');
				});

				// Close menu when clicking outside
				document.addEventListener('click', (event) => {
					const target = event.target as Node;
					if (!mobileMenuButton.contains(target) && !mobileMenu.contains(target)) {
						mobileMenu.classList.add('hidden');
					}
				});

				// Close menu when window is resized to desktop size
				window.addEventListener('resize', () => {
					if (window.innerWidth >= 640) { // sm breakpoint
						mobileMenu.classList.add('hidden');
					}
				});
			}
		</script>
	</body>
</html>

<style is:global>
	@tailwind base;
	@tailwind components;
	@tailwind utilities;
</style>
